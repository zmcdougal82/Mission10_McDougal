{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TestDatabase(){const[testResult,setTestResult]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchTestResult=async()=>{try{console.log('Testing database connection...');const response=await axios.get('/api/test');console.log('Test response:',response.data);setTestResult(response.data);setLoading(false);}catch(err){console.error('Error testing database:',err);let errorMessage='Error testing database. Please check the console for details.';if(err.response){console.error('Error response data:',err.response.data);console.error('Error response status:',err.response.status);errorMessage=`Server error: ${err.response.status} - ${JSON.stringify(err.response.data)}`;}else if(err.request){console.error('Error request:',err.request);errorMessage='No response received from server. Please check your connection.';}else{console.error('Error message:',err.message);errorMessage=`Error: ${err.message}`;}setError(errorMessage);setLoading(false);}};fetchTestResult();},[]);if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Testing database connection...\"});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-danger\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Database Connection Test\"}),/*#__PURE__*/_jsx(\"pre\",{className:\"bg-light p-3 mt-3\",style:{maxHeight:'500px',overflow:'auto'},children:JSON.stringify(testResult,null,2)})]});}export default TestDatabase;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TestDatabase","testResult","setTestResult","loading","setLoading","error","setError","fetchTestResult","console","log","response","get","data","err","errorMessage","status","JSON","stringify","request","message","children","className","style","maxHeight","overflow"],"sources":["/Users/zackmcdougal/RiderProjects/WebApplication1/WebApplication1/ClientApp/src/components/TestDatabase.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TestDatabase() {\n  const [testResult, setTestResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTestResult = async () => {\n      try {\n        console.log('Testing database connection...');\n        const response = await axios.get('/api/test');\n        console.log('Test response:', response.data);\n        setTestResult(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error testing database:', err);\n        \n        let errorMessage = 'Error testing database. Please check the console for details.';\n        \n        if (err.response) {\n          console.error('Error response data:', err.response.data);\n          console.error('Error response status:', err.response.status);\n          errorMessage = `Server error: ${err.response.status} - ${JSON.stringify(err.response.data)}`;\n        } else if (err.request) {\n          console.error('Error request:', err.request);\n          errorMessage = 'No response received from server. Please check your connection.';\n        } else {\n          console.error('Error message:', err.message);\n          errorMessage = `Error: ${err.message}`;\n        }\n        \n        setError(errorMessage);\n        setLoading(false);\n      }\n    };\n\n    fetchTestResult();\n  }, []);\n\n  if (loading) {\n    return <div>Testing database connection...</div>;\n  }\n\n  if (error) {\n    return <div className=\"alert alert-danger\">{error}</div>;\n  }\n\n  return (\n    <div>\n      <h2>Database Connection Test</h2>\n      <pre className=\"bg-light p-3 mt-3\" style={{ maxHeight: '500px', overflow: 'auto' }}>\n        {JSON.stringify(testResult, null, 2)}\n      </pre>\n    </div>\n  );\n}\n\nexport default TestDatabase;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACFC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC,CAC7C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,WAAW,CAAC,CAC7CH,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAEC,QAAQ,CAACE,IAAI,CAAC,CAC5CV,aAAa,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAC5BR,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOS,GAAG,CAAE,CACZL,OAAO,CAACH,KAAK,CAAC,yBAAyB,CAAEQ,GAAG,CAAC,CAE7C,GAAI,CAAAC,YAAY,CAAG,+DAA+D,CAElF,GAAID,GAAG,CAACH,QAAQ,CAAE,CAChBF,OAAO,CAACH,KAAK,CAAC,sBAAsB,CAAEQ,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC,CACxDJ,OAAO,CAACH,KAAK,CAAC,wBAAwB,CAAEQ,GAAG,CAACH,QAAQ,CAACK,MAAM,CAAC,CAC5DD,YAAY,CAAG,iBAAiBD,GAAG,CAACH,QAAQ,CAACK,MAAM,MAAMC,IAAI,CAACC,SAAS,CAACJ,GAAG,CAACH,QAAQ,CAACE,IAAI,CAAC,EAAE,CAC9F,CAAC,IAAM,IAAIC,GAAG,CAACK,OAAO,CAAE,CACtBV,OAAO,CAACH,KAAK,CAAC,gBAAgB,CAAEQ,GAAG,CAACK,OAAO,CAAC,CAC5CJ,YAAY,CAAG,iEAAiE,CAClF,CAAC,IAAM,CACLN,OAAO,CAACH,KAAK,CAAC,gBAAgB,CAAEQ,GAAG,CAACM,OAAO,CAAC,CAC5CL,YAAY,CAAG,UAAUD,GAAG,CAACM,OAAO,EAAE,CACxC,CAEAb,QAAQ,CAACQ,YAAY,CAAC,CACtBV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIJ,OAAO,CAAE,CACX,mBAAON,IAAA,QAAAuB,QAAA,CAAK,gCAA8B,CAAK,CAAC,CAClD,CAEA,GAAIf,KAAK,CAAE,CACT,mBAAOR,IAAA,QAAKwB,SAAS,CAAC,oBAAoB,CAAAD,QAAA,CAAEf,KAAK,CAAM,CAAC,CAC1D,CAEA,mBACEN,KAAA,QAAAqB,QAAA,eACEvB,IAAA,OAAAuB,QAAA,CAAI,0BAAwB,CAAI,CAAC,cACjCvB,IAAA,QAAKwB,SAAS,CAAC,mBAAmB,CAACC,KAAK,CAAE,CAAEC,SAAS,CAAE,OAAO,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAChFJ,IAAI,CAACC,SAAS,CAAChB,UAAU,CAAE,IAAI,CAAE,CAAC,CAAC,CACjC,CAAC,EACH,CAAC,CAEV,CAEA,cAAe,CAAAD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}